name: Create Release

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-beta"

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with tags
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate Release Notes
        id: generate_notes
        run: |
          chmod +x .github/scripts/generate_release_notes.sh
          .github/scripts/generate_release_notes.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.generate_notes.outputs.notes }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-beta') }}

      - name: Upload sys_hc.sh
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sys_hc.sh
          asset_name: sys_hc.sh
          asset_content_type: application/x-sh

      - name: Upload install.sh
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./install.sh
          asset_name: install.sh
          asset_content_type: application/x-sh

      - name: Upload uninstall.sh
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./uninstall.sh"
          asset_name: uninstall.sh
          asset_content_type: application/x-sh
